{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["ConnectionFactory","dbName","version","stores","connection","close","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_creatStores","e","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;AAAA,IAAIA,oBAAqB,YAAU;AAClC,KAAMC,SAAS,YAAf;AACA,KAAMC,UAAU,CAAhB;AACA,KAAMC,SAAS,CAAC,aAAD,CAAf;AACA,KAAIC,aAAa,IAAjB;AACA,KAAIC,QAAQ,IAAZ;;AAEA;AACC,+BAAa;AAAA;;AACZ,SAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACA;;AAHF;AAAA;AAAA,mCAIuB;AACrB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACtC,SAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBZ,MAAtB,EAA8BC,OAA9B,CAAlB;AACAQ,iBAAYI,eAAZ,GAA8B,aAAI;AACjCd,wBAAkBe,YAAlB,CAA+BC,EAAEC,MAAF,CAASC,MAAxC;AACA,MAFD;AAGAR,iBAAYS,SAAZ,GAAwB,aAAK;AAC5B,UAAI,CAACf,UAAL,EAAgB;AACfA,oBAAaY,EAAEC,MAAF,CAASC,MAAtB;AACAb,eAAQD,WAAWC,KAAX,CAAiBe,IAAjB,CAAsBhB,UAAtB,CAAR;AACAA,kBAAWC,KAAX,GAAmB,YAAY;AAC9B,cAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACA,QAFD;AAGA;AACDE,cAAQJ,UAAR;AACA,MATD;AAUAM,iBAAYW,OAAZ,GAAsB,aAAI;AACzBC,cAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASO,KAArB;AACAf,aAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACA,MAHD;AAIA,KAnBM,CAAP;AAoBA;AAzBF;AAAA;AAAA,gCA2BqBrB,UA3BrB,EA2BgC;AAC9BD,WAAOuB,OAAP,CAAe,iBAAS;AACvB,SAAGtB,WAAWuB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAH,EAA+C;AAC9CzB,iBAAW0B,iBAAX,CAA6BD,KAA7B;AACA;AACDzB,gBAAW2B,iBAAX,CAA6BF,KAA7B,EAAoC,EAACG,eAAe,IAAhB,EAApC;AACA,KALD;AAMA;AAlCF;AAAA;AAAA,qCAmCyB;AACvB,QAAG5B,UAAH,EAAc;AACbC;AACAD,kBAAa,IAAb;AACA;AACD;AAxCF;;AAAA;AAAA;AA2CA,CAlDuB,EAAxB","file":"ConnectionFactory.js","sourcesContent":["var ConnectionFactory = (function(){\r\n\tconst dbName = 'aluraframe';\r\n\tconst version = 3;\r\n\tconst stores = ['negociacoes'];\r\n\tvar connection = null;\r\n\tvar close = null;\r\n\r\n\treturn class ConnectionFactory{\r\n\t\tconstructor(){\r\n\t\t\tthrow new Error('Nao eh possivel criar instancia de ConnectionFactory')\r\n\t\t}\r\n\t\tstatic getConnection(){\r\n\t\t\treturn new Promise((resolve, reject) =>{\r\n\t\t\t\tlet openRequest = window.indexedDB.open(dbName, version);\r\n\t\t\t\topenRequest.onupgradeneeded = e =>{\r\n\t\t\t\t\tConnectionFactory._creatStores(e.target.result);\r\n\t\t\t\t};\r\n\t\t\t\topenRequest.onsuccess = e => {\r\n\t\t\t\t\tif (!connection){\r\n\t\t\t\t\t\tconnection = e.target.result;\r\n\t\t\t\t\t\tclose = connection.close.bind(connection);\r\n\t\t\t\t\t\tconnection.close = function () {\r\n\t\t\t\t\t\t\tthrow new Error('Voce nao pode fechar a conexao diretamente');\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(connection);\r\n\t\t\t\t};\r\n\t\t\t\topenRequest.onerror = e =>{\r\n\t\t\t\t\tconsole.log(e.target.error);\r\n\t\t\t\t\treject(e.target.error.name);\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tstatic _creatStores(connection){\r\n\t\t\tstores.forEach(store => {\r\n\t\t\t\tif(connection.objectStoreNames.contains(store)){\r\n\t\t\t\t\tconnection.deleteObjectStore(store);\r\n\t\t\t\t}\r\n\t\t\t\tconnection.createObjectStore(store, {autoIncrement: true})\r\n\t\t\t})\r\n\t\t}\r\n\t\tstatic closeConnection(){\r\n\t\t\tif(connection){\r\n\t\t\t\tclose();\r\n\t\t\t\tconnection = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n\r\n"]}