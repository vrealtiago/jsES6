{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["dbName","version","stores","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_creatStores","e","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACMA,S,GAAS,Y;AACTC,U,GAAU,C;AACVC,S,GAAS,CAAC,aAAD,C;AACXC,a,GAAa,I;AACbC,Q,GAAQ,I;;gCAECC,iB;AACZ,iCAAa;AAAA;;AACZ,WAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACA;;;;qCACqB;AACrB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACtC,WAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBb,MAAtB,EAA8BC,OAA9B,CAAlB;AACAS,mBAAYI,eAAZ,GAA8B,aAAI;AACjCT,0BAAkBU,YAAlB,CAA+BC,EAAEC,MAAF,CAASC,MAAxC;AACA,QAFD;AAGAR,mBAAYS,SAAZ,GAAwB,aAAK;AAC5B,YAAI,CAAChB,UAAL,EAAgB;AACfA,sBAAaa,EAAEC,MAAF,CAASC,MAAtB;AACAd,iBAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;AACAA,oBAAWC,KAAX,GAAmB,YAAY;AAC9B,gBAAM,IAAIE,KAAJ,CAAU,4CAAV,CAAN;AACA,UAFD;AAGA;AACDE,gBAAQL,UAAR;AACA,QATD;AAUAO,mBAAYW,OAAZ,GAAsB,aAAI;AACzBC,gBAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASO,KAArB;AACAf,eAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACA,QAHD;AAIA,OAnBM,CAAP;AAoBA;;;kCAEmBtB,U,EAAW;AAC9BD,aAAOwB,OAAP,CAAe,iBAAS;AACvB,WAAGvB,WAAWwB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAH,EAA+C;AAC9C1B,mBAAW2B,iBAAX,CAA6BD,KAA7B;AACA;AACD1B,kBAAW4B,iBAAX,CAA6BF,KAA7B,EAAoC,EAACG,eAAe,IAAhB,EAApC;AACA,OALD;AAMA;;;uCACuB;AACvB,UAAG7B,UAAH,EAAc;AACbC;AACAD,oBAAa,IAAb;AACA;AACD","file":"ConnectionFactory.js","sourcesContent":["\r\nconst dbName = 'aluraframe';\r\nconst version = 3;\r\nconst stores = ['negociacoes'];\r\nlet connection = null;\r\nlet close = null;\r\n\r\nexport class ConnectionFactory{\r\n\tconstructor(){\r\n\t\tthrow new Error('Nao eh possivel criar instancia de ConnectionFactory')\r\n\t}\r\n\tstatic getConnection(){\r\n\t\treturn new Promise((resolve, reject) =>{\r\n\t\t\tlet openRequest = window.indexedDB.open(dbName, version);\r\n\t\t\topenRequest.onupgradeneeded = e =>{\r\n\t\t\t\tConnectionFactory._creatStores(e.target.result);\r\n\t\t\t};\r\n\t\t\topenRequest.onsuccess = e => {\r\n\t\t\t\tif (!connection){\r\n\t\t\t\t\tconnection = e.target.result;\r\n\t\t\t\t\tclose = connection.close.bind(connection);\r\n\t\t\t\t\tconnection.close = function () {\r\n\t\t\t\t\t\tthrow new Error('Voce nao pode fechar a conexao diretamente');\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tresolve(connection);\r\n\t\t\t};\r\n\t\t\topenRequest.onerror = e =>{\r\n\t\t\t\tconsole.log(e.target.error);\r\n\t\t\t\treject(e.target.error.name);\r\n\t\t\t};\r\n\t\t})\r\n\t}\r\n\r\n\tstatic _creatStores(connection){\r\n\t\tstores.forEach(store => {\r\n\t\t\tif(connection.objectStoreNames.contains(store)){\r\n\t\t\t\tconnection.deleteObjectStore(store);\r\n\t\t\t}\r\n\t\t\tconnection.createObjectStore(store, {autoIncrement: true})\r\n\t\t})\r\n\t}\r\n\tstatic closeConnection(){\r\n\t\tif(connection){\r\n\t\t\tclose();\r\n\t\t\tconnection = null;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n"]}